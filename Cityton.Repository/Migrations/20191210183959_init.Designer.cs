// <auto-generated />
using System;
using Cityton.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cityton.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20191210183959_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Cityton.Data.Models.Achievement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FromChallengeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UnlockedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromChallengeId");

                    b.HasIndex("WinnerId");

                    b.ToTable("Achievements");
                });

            modelBuilder.Entity("Cityton.Data.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Statement")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("Statement")
                        .IsUnique();

                    b.ToTable("Challenges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2019, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chien trop chou",
                            Statement = "Faire une photo avec un chien",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2019, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Début d'un amour",
                            Statement = "Avoir le numéro de quelqu'un",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2019, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ô belles boules",
                            Statement = "Faire une vidéo devant l'Atomium",
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 4,
                            CreatedAt = new DateTime(2019, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Grande mais petite",
                            Statement = "Faire une photo sur la grande place",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 9,
                            CreatedAt = new DateTime(2019, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bonne et bien chaude",
                            Statement = "Faire une vidéo en mangeant une gauffre",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Cityton.Data.Models.ChallengeGiven", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ChallengeId")
                        .HasColumnType("int");

                    b.Property<int>("ChallengedGroupId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeId");

                    b.HasIndex("ChallengedGroupId");

                    b.ToTable("ChallengesGiven");
                });

            modelBuilder.Entity("Cityton.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("MaxGroupSize")
                        .HasColumnType("int");

                    b.Property<int>("MinGroupSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxGroupSize = 6,
                            MinGroupSize = 4,
                            Name = "Bruxton"
                        });
                });

            modelBuilder.Entity("Cityton.Data.Models.Discussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Discussions");
                });

            modelBuilder.Entity("Cityton.Data.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Cityton.Data.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContainedInId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Extension")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("Cityton.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DiscussionId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Cityton.Data.Models.ParticipantGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BelongingGroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BelongingGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("ParticipantGroups");
                });

            modelBuilder.Entity("Cityton.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Email = "admin01@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "6019911684 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 2,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxIiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.GVPlUzPhKJcChjGuSOOFJmSzSrqdVW0wEeG0VqGqe-M",
                            Username = "admin01"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            Email = "admin02@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "3069338796 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 2,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIyIiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.y6-KgCDURMZ-mWj1QX5SKpeAeJOiRqqh3zq33wJN-wI",
                            Username = "admin02"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            Email = "admin03@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "105989609 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 2,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIzIiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.KTc0ajIjhO4ZKPNkgGmeDPSzJgT1N_OmY-xxtO_GDjo",
                            Username = "admin03"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 1,
                            Email = "admin04@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "4866078694 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 2,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI0IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.k_2DoHfMda9YBDo62qE-fNPuJahpdVnlulUNb3rmEgQ",
                            Username = "admin04"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 1,
                            Email = "admin05@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "8659710084 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 2,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI1IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.FXSWSMHVB3TMNeHONowktWbfVlCmiJsg-AH-l6akq0k",
                            Username = "admin05"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 1,
                            Email = "checker01@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "5844956388 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 1,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI2IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.3U1OUPDxoQGRLzhzYFwqPj-sWkVSW3GpidYtFdLkz7A",
                            Username = "checker01"
                        },
                        new
                        {
                            Id = 7,
                            CompanyId = 1,
                            Email = "checker02@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "1669765414 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 1,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI3IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.JkPvNDXGns1awbBDqoP1BF1saLk-EFyg9qpEqS3qvfs",
                            Username = "checker02"
                        },
                        new
                        {
                            Id = 8,
                            CompanyId = 1,
                            Email = "checker03@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "5598781614 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 1,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI4IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.yxMEEqm3e6csSe-r4TJRhT1JNne36USTraDL-M1LHCU",
                            Username = "checker03"
                        },
                        new
                        {
                            Id = 9,
                            CompanyId = 1,
                            Email = "member01@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "3272464106 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiI5IiwibmJmIjoxNTc2MDAzMTk4LCJleHAiOjE1NzY2MDc5OTgsImlhdCI6MTU3NjAwMzE5OH0.kqzp33HWOnKuKc7YXqYvF_q4TJk9LoGp7nvJxDeTmF8",
                            Username = "member01"
                        },
                        new
                        {
                            Id = 10,
                            CompanyId = 1,
                            Email = "member02@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "5414887288 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxMCIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.z5oSAPYE2dPVUUUk2cVMnmAdEseS0jTV6Bb1C7DNaKc",
                            Username = "member02"
                        },
                        new
                        {
                            Id = 11,
                            CompanyId = 1,
                            Email = "member03@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "4786399505 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxMSIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.evcYpJSuqrUhj6jfNFyrbbp26lZCF40qtOMlAz-dzAs",
                            Username = "member03"
                        },
                        new
                        {
                            Id = 12,
                            CompanyId = 1,
                            Email = "member04@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "2358305614 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxMiIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.oQlY0xUkI2y2bDMpj6vt2l98MvozR5IaPQKDsSighYQ",
                            Username = "member04"
                        },
                        new
                        {
                            Id = 13,
                            CompanyId = 1,
                            Email = "member05@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "1064846605 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxMyIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.6wBJ7gNysYU7PkYBzY0Wggy2CVBSm8m8IjYoQyShHPU",
                            Username = "member05"
                        },
                        new
                        {
                            Id = 14,
                            CompanyId = 1,
                            Email = "member06@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "4686272886 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxNCIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.Yfpz1KKG3FF-gDGYCNiX8eRNl6E0QYjcZ_0MBxwilqo",
                            Username = "member06"
                        },
                        new
                        {
                            Id = 15,
                            CompanyId = 1,
                            Email = "member07@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "5071973872 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxNSIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.JKaCnj0YU-vnI46FbTB3SbLsVFoaRrm61rxMkJmruNQ",
                            Username = "member07"
                        },
                        new
                        {
                            Id = 16,
                            CompanyId = 1,
                            Email = "member08@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "334355105 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxNiIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.0x-TP_MBYbcCZQuJ3MnTKc3o23wPFGob-28XRyUCyNA",
                            Username = "member08"
                        },
                        new
                        {
                            Id = 17,
                            CompanyId = 1,
                            Email = "member09@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "5471673152 ",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxNyIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.FH41PYfxNlXOOCT9EOWFEwfW5KyS5D3JFqSDv7U_dbk",
                            Username = "member09"
                        },
                        new
                        {
                            Id = 18,
                            CompanyId = 1,
                            Email = "member10@gmail.com",
                            PasswordHash = new byte[] { 35, 219, 58, 82, 86, 244, 71, 216, 164, 106, 69, 160, 179, 31, 132, 243, 129, 158, 160, 183, 155, 145, 88, 236, 99, 205, 11, 169, 84, 222, 59, 121, 42, 191, 226, 105, 155, 29, 135, 246, 173, 129, 27, 246, 40, 226, 236, 13, 211, 190, 30, 216, 19, 60, 86, 192, 218, 147, 205, 41, 240, 14, 70, 32 },
                            PasswordSalt = new byte[] { 132, 95, 223, 118, 198, 70, 173, 131, 224, 137, 86, 178, 15, 32, 105, 249, 133, 75, 210, 194, 51, 128, 203, 182, 180, 101, 227, 115, 36, 118, 66, 173, 218, 94, 219, 37, 126, 74, 124, 69, 166, 209, 170, 63, 199, 146, 98, 178, 205, 165, 110, 233, 247, 105, 208, 22, 168, 243, 108, 125, 141, 189, 5, 180, 0, 207, 125, 49, 3, 132, 213, 120, 118, 102, 232, 168, 0, 217, 149, 216, 184, 90, 148, 97, 25, 105, 118, 58, 255, 16, 220, 195, 224, 218, 27, 114, 196, 62, 56, 50, 223, 43, 64, 44, 119, 226, 174, 152, 214, 148, 133, 188, 180, 210, 213, 38, 66, 131, 70, 11, 176, 88, 67, 170, 236, 169, 226, 137 },
                            PhoneNumber = "8758801056",
                            Picture = "https://res.cloudinary.com/dakczk6el/image/upload/v1576003103/default.png",
                            Role = 0,
                            Token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1laWQiOiIxOCIsIm5iZiI6MTU3NjAwMzE5OCwiZXhwIjoxNTc2NjA3OTk4LCJpYXQiOjE1NzYwMDMxOTh9.QULExawBrYnN2IXX4fHkWKpt7LECGcYL_q7U7uhikqA",
                            Username = "member10"
                        });
                });

            modelBuilder.Entity("Cityton.Data.Models.UserInDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DiscussionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ParticipantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscussionId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("UsersInDiscussion");
                });

            modelBuilder.Entity("Cityton.Data.Models.Achievement", b =>
                {
                    b.HasOne("Cityton.Data.Models.Challenge", "FromChallenge")
                        .WithMany("Achievements")
                        .HasForeignKey("FromChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cityton.Data.Models.User", "Winner")
                        .WithMany("Achievements")
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.Challenge", b =>
                {
                    b.HasOne("Cityton.Data.Models.User", "Author")
                        .WithMany("Challenges")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.ChallengeGiven", b =>
                {
                    b.HasOne("Cityton.Data.Models.Challenge", "Challenge")
                        .WithMany("ChallengeGivens")
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cityton.Data.Models.Group", "ChallengedGroup")
                        .WithMany("ChallengesGiven")
                        .HasForeignKey("ChallengedGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.Media", b =>
                {
                    b.HasOne("Cityton.Data.Models.Message", "ContainedIn")
                        .WithOne("Media")
                        .HasForeignKey("Cityton.Data.Models.Media", "MessageId");
                });

            modelBuilder.Entity("Cityton.Data.Models.Message", b =>
                {
                    b.HasOne("Cityton.Data.Models.User", "Author")
                        .WithMany("MessagesWriten")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cityton.Data.Models.Discussion", "Discussion")
                        .WithMany("Messages")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.ParticipantGroup", b =>
                {
                    b.HasOne("Cityton.Data.Models.Group", "BelongingGroup")
                        .WithMany("Members")
                        .HasForeignKey("BelongingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cityton.Data.Models.User", "User")
                        .WithMany("ParticipantGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.User", b =>
                {
                    b.HasOne("Cityton.Data.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cityton.Data.Models.UserInDiscussion", b =>
                {
                    b.HasOne("Cityton.Data.Models.Discussion", "Discussion")
                        .WithMany("UsersInDiscussion")
                        .HasForeignKey("DiscussionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cityton.Data.Models.User", "Participant")
                        .WithMany("UsersInDiscussion")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
